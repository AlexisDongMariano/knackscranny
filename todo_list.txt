! = currently working
$ = finished
======================
IMPORTANT/URGENT tasks
======================
1.(Sep-17-2020) U1.I2: add a column in Order admin, where it lists the count of order items 

$2.(Sep-17-2020) U1.I1 --> 100% DONE (Sep-18-2020): fix Checkout form page

3.(Sep-17-2020) U1.I2: fix the admin pages
    > set the label of customers so that we could easily identify if it is registered user - like in Order admin view

$4.(Sep-17-2020) U1.I1 --> 100% DONE (Sep-18-2020): create user registration and bind the customer functionality 

$5.(Sep-18-2020) U1.I1 --> 100% DONE (Sep-18-2020): fix payment functionality for anonymous users

$6.(Sep-18-2020) U2.I1 --> 100% DONE (Sep-21-2020): work on discount codes
    > (Sep-20-2020): Create CouponForm in the views and add the logic, as well as the computation to be added in the Order model

$7.(Sep-21-2020) U2.I1: --> 100% DONE (Sep-23-2020): restrict user going directly to 
    > checkout and/or payments if the user has no orderitems, payment stripe

$8.(Sep-21-2020) U2.I1: --> 100% DONE (Sep-23-2020): prepopulate contact # in the checkout form

$9.(Sep-21-2020) U2.I1 --> 100% DONE (Sep-23-2020): work on the # of cart items in the navbar

!10.(Sep-21-2020) U2.I1 --> 50% DONE (Dec-31-2020): work on the login, registration page

$11.(Sep-24-2020) U2.I1: --> 100% DONE (Dec-31-2020): Add quantity to the coupon and logic in the code
    > Check if the coupon is not expired, if expiration date is filled

12.(Sep-25-2020) U2.I1: Modify Order Status admin page

13.(Sep-25-2020) U2.I1: Maybe add Refund model and view?

$14.(Sep-24-2020) U2.I1 --> 100% DONE (Oct-11-2020): Work on the User's profile page
    > add id tag in every orders/payments so that we can add an href pointing to each other

15.(Oct-09-2020) U2.I1: figure out and/or add the stages of the order when order status is changed in the admin page

16.(Oct-16-2020) U2.I1: --> 99% DONE (Nov-09-2020): add the labels and search functionality
    > fix the label color (html class name), can use a model property for item
    > add/continue the filter functionality
    > fix the filtering functionality (use localstorage js)
    > change the filter text in the UI to indicate that filter is active
    > display in the UI the text results for (search term), (filters checked)

$17.(Oct-19-2020) U1.I1: --> 100% DONE (Oct-20-2020): fix the signals in items when updating the item labels

$18.(Oct-23-2020) U1.I1: --> 100% DONE (Oct-27-2020): implement pagination

$19.(Nov-13-2020) U1.I1: --> 100% DONE (Dec-31-2020): Add a checking in the Profile section for modifying username

$20.(Nov-13-2020) U1.I1 --> 100% DONE (Dec-09-2020): Continue the add review functionality
    > Display the review including the rating as stars (maybe make js for this gui) --> 100% DONE
    > Make sure that one customer can only make one review --> 100% DONE
    > make a checking in client that ensures rating is filled before submitting the review (js could be used) --> 100% DONE
    > user should be able to edit/delete review --> 100% DONE we will not delete the review
    > add a pagination for the reviews

$21.(Dec-29-2020) U1.I1: --> 100% DONE (Dec-30-2020): Modify navbar to include cart to anonymous users

$22.(Jan-01-2021) U2.I1: --> 100% DONE (Jan-01-2021): Add pagination in orders and payments

$23.(Jan-01-2021) U2.I1: --> 100% DONE (Jan-01-2021): Center all pagination

!24.(Jan-01-2021) U2.I1: Add a backup image for deleted or missing images for all models that has image fields

25.(Jan-01-2021) U2.U1: find a way to have a link to go the main item list instead of going to landing page

26.(Jan-03-2021) U2.U1: --> 50% DONE (Jan-04-2020): add an option to clear searches/filters, clear all filters

$27.(Jan-03-2021) U2.U1: --> 100% DONE (Jan-03-2020): display the discount price if exists

28.(Jan-04-2021) U2.U1: Check the checkout and other functionalities if user anonymous

=========================
TODO list labeled in view
=========================
1.TODO (Sep-14-2020): create a charge cancel or charge refund
    > if the stripe payment went through but there was an issue in saving the payment and/or updating the order inside the try block
    > send an email as well

2.TODO (Sep-14-2020): create a thank you template
    > once the stripe payment is successful

3.TODO (Sep-17-2020) --> 100% DONE (Sep-17-2020): 
    > edit the checkout template to add fields for anonymous user

4.TODO (Oct-9-2020): remove the Decimal casting once the db is flushed as well as the import Decimal


=============================
TODO list NOT labeled in view
=============================
$1.(Sep-14-2020): --> 100% DONE (Dec-30-2020): subtract the value of orderItem quantity to the variationItem inventory when the transaction is successful

$2.(Sep-14-2020) --> 100% DONE (Sep-17-2020): create a CustomerProxy model or something in place of Customer(User) so that we can use this if the user is anonymous
    > check or get the sessions value for the anonymous user
    > check the usage of signals upon authentication
    # https://stackoverflow.com/questions/925456/giving-anonymous-users-the-same-functionality-as-registered-ones
    # https://stackoverflow.com/questions/60065854/how-to-keep-track-of-users-who-are-not-logged-in-django
    # https://stackoverflow.com/questions/36263857/calling-a-method-when-the-user-login-django
    **Latest TODO Update (Sep-17-2020)
        > update the items when the anonymous is promoted as a registered user
        > update the user during the registration save stage

3.(Sep-14-2020): create a crontab cleanup script for deleting stale addresses (which is not default and not binded to order)
    > query: Address.objects.filter(shipping_address__isnull=True, billing_address__isnull=True).exclude(default=True)
    ** shipping_address and billing_address are related manager query from orders because of related_name
    ** if related name is not present, it can be as simple as Address.objects.filter(order__isnull=True)

4.(Sep-15-2020): modify the admin view for Payment model

5.(Sep-16-2020): add a crontab for deleting Customers that has no binded User

6.(Sep-21-2020): work on the forgot password feature


=========
MISC TODO
=========
sendemail.TODO (Sep-14-2020): configure sending email and use

=====
BUGS
=====
$1.(Jan-04-2021): --> FIXED (Jan-04-2021): Check the Search, seems it's not working

=====
NOTES
=====
!1.(Dec-10-2020): Should allow deletion of users but deactivate instead of delete so that we have a record of the orders and avoid breaking of things
    especially in the order models. Return back the order admin. This is implemented because if a user is deleted, an order will have no reference to an order
    thus breaking the admin page for the order. Same logic is applied I think for other models.
$2.(Dec-11-2020): Should NOT delete the coupon codes for reference, if it should be disabled, just set the quantity to zero or expiration date:
https://stackoverflow.com/questions/4043843/in-django-admin-how-do-i-disable-the-delete-link